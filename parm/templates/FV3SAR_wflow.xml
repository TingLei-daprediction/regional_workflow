<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE workflow [

<!--
SECTION 1:
Variables that are modified by the workflow generation script.
-->

<!--
The following are variables that are not passed to the shell scripts 
that execute the various worklflow tasks but are used in other ways by
the workflow XML.
-->
<!ENTITY ACCOUNT          "">
<!ENTITY SCHED            ""> 
<!ENTITY QUEUE_DEFAULT    "">
<!ENTITY QUEUE_HPSS       "">
<!ENTITY QUEUE_RUN_FV3SAR "">

<!ENTITY USHDIR  "">
<!ENTITY EXPTDIR "">

<!ENTITY EXTRN_MDL_NAME_ICSSURF "">
<!ENTITY EXTRN_MDL_NAME_LBCS    "">

<!ENTITY EXTRN_MDL_FILES_SYSBASEDIR_ICSSURF "">
<!ENTITY EXTRN_MDL_FILES_SYSBASEDIR_LBCS    "">

<!ENTITY CDATE_FIRST_CYCL "">
<!ENTITY CDATE_LAST_CYCL "">
<!ENTITY YYYY_FIRST_CYCL "">
<!ENTITY MM_FIRST_CYCL "">
<!ENTITY DD_FIRST_CYCL "">
<!ENTITY HH_FIRST_CYCL "">
<!ENTITY CYCL_INTVL "">

<!ENTITY FHR "">

<!ENTITY USER "">
<!ENTITY DOMAIN "">
<!ENTITY SH "">
<!ENTITY EH "">
<!ENTITY BCNODES "">
<!ENTITY FCSTNODES "">
<!ENTITY POSTNODES "">
<!ENTITY GOESPOSTNODES "">
<!ENTITY GOESPOSTTHROTTLE "">

<!--
The following are variables that are passed to the shell scripts that 
execute the various workflow tasks but are not otherwise used in the 
workflow XML.
-->
<!ENTITY SCRIPT_VAR_DEFNS_FP "">

<!--
SECTION 2:
Variables that are not modified by the workflow generation script.
-->
<!ENTITY LOG_DIR "&EXPTDIR;/log">

<!ENTITY PROC_MAKE_GRID_OROG      "1:ppn=24">
<!ENTITY PROC_STAGE_STATIC        "1:ppn=1">
<!ENTITY PROC_MAKE_SFC_CLIMO      "1:ppn=24">
<!ENTITY PROC_GET_EXTRN_MDL_FILES "1:ppn=1">
<!ENTITY PROC_MAKE_ICS_SURF_LBC0  "4:ppn=12">
<!ENTITY PROC_MAKE_LBC1_TO_LBCN   "4:ppn=12">
<!ENTITY PROC_STAGE               "1:ppn=1">
<!ENTITY PROC_RUN_FV3SAR          "">
<!ENTITY PROC_POST                "2:ppn=24">

<!ENTITY RSRC_MAKE_GRID_OROG      "<walltime>00:10:00</walltime>">
<!ENTITY RSRC_STAGE_STATIC        "<walltime>00:10:00</walltime>">
<!ENTITY RSRC_MAKE_SFC_CLIMO      "<walltime>01:00:00</walltime>">
<!ENTITY RSRC_GET_EXTRN_MDL_FILES "<walltime>00:20:00</walltime>">
<!ENTITY RSRC_MAKE_ICS_SURF_LBC0  "<walltime>00:15:00</walltime>">
<!ENTITY RSRC_MAKE_LBC1_TO_LBCN   "<walltime>00:30:00</walltime>">
<!ENTITY RSRC_STAGE               "<walltime>00:10:00</walltime>">
<!ENTITY RSRC_RUN_FV3SAR          "<walltime>07:30:00</walltime>">
<!ENTITY RSRC_POST                "<walltime>00:30:00</walltime>">

<!ENTITY RSRV_DEFAULT    "<queue>&QUEUE_DEFAULT;</queue><account>&ACCOUNT;</account>"> 
<!ENTITY RSRV_HPSS       "<partition>&QUEUE_HPSS;</partition><account>&ACCOUNT;</account>"> 
<!ENTITY RSRV_RUN_FV3SAR "<queue>&QUEUE_RUN_FV3SAR;</queue><account>&ACCOUNT;</account>"> 

]>

<workflow realtime="F" scheduler="&SCHED;" cyclethrottle="20">

  <cycledef group="at_start">00 &HH_FIRST_CYCL; &DD_FIRST_CYCL; &MM_FIRST_CYCL; &YYYY_FIRST_CYCL; *</cycledef>
  <cycledef group="all_cycles">&CDATE_FIRST_CYCL; &CDATE_LAST_CYCL; &CYCLE_INTVL;</cycledef>

  <log>
    <cyclestr>&LOG_DIR;/FV3SAR_wflow.log</cyclestr>
  </log>
<!--
************************************************************************
************************************************************************
-->
  <task name="make_grid_orog" cycledefs="at_start" maxtries="4">

    &RSRC_MAKE_GRID_OROG;
    &RSRV_DEFAULT;

    <command>&USHDIR;/make_grid_orog.sh</command>
    <nodes>&PROC_MAKE_GRID_OROG;</nodes>
    <jobname>make_grid_orog</jobname>
    <join><cyclestr>&LOG_DIR;/make_grid_orog.log</cyclestr></join>

    <envar><name>SCRIPT_VAR_DEFNS_FP</name><value>&SCRIPT_VAR_DEFNS_FP;</value></envar>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="make_sfc_climo" cycledefs="at_start" maxtries="2">

    &RSRC_MAKE_SFC_CLIMO;
    &RSRV_DEFAULT;

    <command>&USHDIR;/make_sfc_climo.sh</command>
    <nodes>&PROC_MAKE_SFC_CLIMO;</nodes>
    <jobname>make_sfc_climo</jobname>
    <join><cyclestr>&LOG_DIR;/make_sfc_climo.log</cyclestr></join>

    <envar><name>SCRIPT_VAR_DEFNS_FP</name><value>&SCRIPT_VAR_DEFNS_FP;</value></envar>

    <dependency>
      <taskdep task="make_grid_orog"/>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="stage_static" cycledefs="at_start" maxtries="2">

    &RSRC_STAGE_STATIC;
    &RSRV_DEFAULT;

    <command>&USHDIR;/stage_static.sh</command>
    <nodes>&PROC_STAGE_STATIC;</nodes>
    <jobname>stage_static</jobname>
    <join><cyclestr>&LOG_DIR;/stage_static.log</cyclestr></join>

    <envar><name>SCRIPT_VAR_DEFNS_FP</name><value>&SCRIPT_VAR_DEFNS_FP;</value></envar>

    <dependency>
      <taskdep task="make_sfc_climo"/>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="get_files_ICSSURF" maxtries="3">

    &RSRC_GET_EXTRN_MDL_FILES;
    &RSRV_HPSS;

    <command>&USHDIR;/get_extrn_mdl_files.sh</command>
    <nodes>&PROC_GET_EXTRN_MDL_FILES;</nodes>
    <jobname>get_files_ICSSURF</jobname>
    <join><cyclestr>&LOG_DIR;/get_files_ICSSURF_@Y@m@d@H.log</cyclestr></join>

    <envar><name>SCRIPT_VAR_DEFNS_FP</name><value>&SCRIPT_VAR_DEFNS_FP;</value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>EXTRN_MDL_NAME</name><value>&EXTRN_MDL_NAME_ICSSURF;</value></envar>
    <envar><name>ICSSURF_OR_LBCS</name><value>ICSSURF</value></envar>

    <dependency>
<!--
Launch this task only if the stage_static task is complete.  We cannot
use a taskdep to check for completion of the state_static task because 
rocoto then assumes that stage_static must be run for each cycle, in-
cluding the current cycle (despite the fact that cycledefs is set to 
"at_start" for that task), before running this task for the current cy-
cle.
-->
      <datadep age="00:00:00:05">&EXPTDIR;/stage_static_task_complete.txt</datadep>
    </dependency>

  </task> 
<!--
************************************************************************
************************************************************************
-->
  <task name="get_files_LBCS" maxtries="3">

    &RSRC_GET_EXTRN_MDL_FILES;
    &RSRV_HPSS;

    <command>&USHDIR;/get_extrn_mdl_files.sh</command>
    <nodes>&PROC_GET_EXTRN_MDL_FILES;</nodes>
    <jobname>get_files_LBCS</jobname>
    <join><cyclestr>&LOG_DIR;/get_files_LBCS_@Y@m@d@H.log</cyclestr></join>

    <envar><name>SCRIPT_VAR_DEFNS_FP</name><value>&SCRIPT_VAR_DEFNS_FP;</value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>EXTRN_MDL_NAME</name><value>&EXTRN_MDL_NAME_LBCS;</value></envar>
    <envar><name>ICSSURF_OR_LBCS</name><value>LBCS</value></envar>

    <dependency>
<!--
Launch this task only if the stage_static task is complete.  We cannot
use a taskdep to check for completion of the state_static task because 
rocoto then assumes that stage_static must be run for each cycle, in-
cluding the current cycle (despite the fact that cycledefs is set to 
"at_start" for that task), before running this task for the current cy-
cle.
-->
      <datadep age="00:00:00:05">&EXPTDIR;/stage_static_task_complete.txt</datadep>
    </dependency>

  </task> 
<!--
************************************************************************
************************************************************************
-->
  <task name="make_ICS_surf_LBC0" maxtries="3">

    &RSRC_MAKE_ICS_SURF_LBC0;
    &RSRV_DEFAULT;

    <command>&USHDIR;/make_ICS_surf_LBC0.sh</command>
    <nodes>&PROC_MAKE_ICS_SURF_LBC0;</nodes>
    <jobname>make_ICS_surf_LBC0</jobname>
    <join><cyclestr>&LOG_DIR;/make_ICS_surf_LBC0_@Y@m@d@H.log</cyclestr></join>
    
    <envar><name>SCRIPT_VAR_DEFNS_FP</name><value>&SCRIPT_VAR_DEFNS_FP;</value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>

    <dependency>
      <taskdep task="get_files_ICSSURF"/>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="make_LBC1_to_LBCN" maxtries="3">

    &RSRC_MAKE_LBC1_TO_LBCN;
    &RSRV_DEFAULT;

    <command>&USHDIR;/make_LBC1_to_LBCN.sh</command>
    <nodes>&PROC_MAKE_LBC1_TO_LBCN;</nodes>
    <jobname>make_LBC1_to_LBCN</jobname>
    <join><cyclestr>&LOG_DIR;/make_LBC1_to_LBCN_@Y@m@d@H.log</cyclestr></join>

    <envar><name>SCRIPT_VAR_DEFNS_FP</name><value>&SCRIPT_VAR_DEFNS_FP;</value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>

    <dependency>
      <taskdep task="get_files_LBCS"/>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="stage" maxtries="2">

    &RSRC_STAGE;
    &RSRV_DEFAULT;

    <command>&USHDIR;/stage.sh</command>
    <nodes>&PROC_STAGE;</nodes>
    <jobname>stage</jobname>
    <join><cyclestr>&LOG_DIR;/stage_@Y@m@d@H.log</cyclestr></join>

    <envar><name>SCRIPT_VAR_DEFNS_FP</name><value>&SCRIPT_VAR_DEFNS_FP;</value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="make_ICS_surf_LBC0"/>
        <taskdep task="make_LBC1_to_LBCN"/>
      </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="run_FV3SAR" maxtries="3">

    &RSRC_RUN_FV3SAR;
    &RSRV_RUN_FV3SAR;

    <command>&USHDIR;/run_FV3SAR.sh</command>
    <nodes>&PROC_RUN_FV3SAR;</nodes>
    <jobname>run_FV3SAR</jobname>
    <join><cyclestr>&LOG_DIR;/run_FV3SAR_@Y@m@d@H.log</cyclestr></join>

    <envar><name>SCRIPT_VAR_DEFNS_FP</name><value>&SCRIPT_VAR_DEFNS_FP;</value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>

    <dependency>
      <taskdep task="stage"/>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <metatask name="post">
    
    <var name="fhr">&FHR;</var>
    
    <task name="post_#fhr#" maxtries="2">
    
      &RSRC_POST;
      &RSRV_DEFAULT;

      <command>&USHDIR;/run_post.sh</command>
      <nodes>&PROC_POST;</nodes>
      <jobname>run_post_#fhr#</jobname>
      <join><cyclestr>&LOG_DIR;/run_post_#fhr#_@Y@m@d@H.log</cyclestr></join>

      <envar><name>SCRIPT_VAR_DEFNS_FP</name><value>&SCRIPT_VAR_DEFNS_FP;</value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>

      <dependency>
        <and>
          <datadep age="05:00"><cyclestr>&EXPTDIR;/@Y@m@d@H/dynf0#fhr#.nc</cyclestr></datadep>
          <datadep age="05:00"><cyclestr>&EXPTDIR;/@Y@m@d@H/phyf0#fhr#.nc</cyclestr></datadep>
        </and>
      </dependency>

    </task>

  </metatask>

</workflow>
